@model PGD.Application.ViewModels.ProdutoViewModel
@using PGD.Application.ViewModels;
<tr>
    <td class="hidden-xs hidden-sm">@Model.GrupoAtividade.NomGrupoAtividade</td>
    <td>@Model.Atividade.NomAtividade</td>
    <td class="hidden-xs hidden-sm">@Model.TipoAtividade.Faixa</td>

    @if (Model != null)
    {
        <td class="text-center">@Model.QuantidadeProduto</td>
        <td class="text-center">@Model.CargaHorariaTotalProdutoFormatada</td>
        <td class="text-center">@Model.QuantidadeProdutoAvaliado</td>
        <td class="text-center">@Model.CargaHorariaHomologada</td>

        // }
        // else if (Model != null && Model.PodeVisualizarPactuadoAvaliado)
        //{

        <!--
                    <td class="text-center">@Model.QuantidadeProduto</td>
                    <td class="text-center">@Model.CargaHorariaTotalProdutoFormatada</td>
                    <td class="text-center">@Model.QuantidadeProdutoAvaliado</td>
                    <td class="text-center">@Model.CargaHorariaHomologada</td>
        -->
        //  if (Model != null && Model.Avaliacoes != null && Model.Avaliacoes.Count > 0)
        //  {

        if (Model.PodeVisualizarAvaliacaoProduto && Model.Avaliacoes.Count() > 0)
        {
            <td class="text-center">@(Model.Avaliacoes[0].EntregueNoPrazo == true ? "Sim" : "Não")</td>
            <td class="text-center">@Model.Avaliacoes[0].Avaliacao</td>
            <td class="text-center"> @Html.Raw(@Model.Avaliacoes[0].LocalizacaoProduto)</td>
        }
        else
        {
            <td class="text-center"></td>
            <td class="text-center"></td>
            <td class="text-center"></td>
        }


        //}
        //else
        //{
        <!--
        <td class="text-center"></td>
        <td class="text-center"></td>
        <td class="text-center"> </td>
        -->
        //}



    }


<td class="text-left">
    <div style="text-overflow: ''">@Html.Raw(@Model.Observacoes)</div>
    


    @if (Model.PodeEditarObservacaoProduto)
    {
        using (Ajax.BeginForm("PreparaAlteracaoObservacaoProduto", "Pacto", new { indexProduto = Model.Index, idPacto = Model.IdPacto },
                    new AjaxOptions()
                    {
                        HttpMethod = "Post",
                        UpdateTargetId = "divConteudoObservacoesProduto",
                        OnSuccess = "preparaAlteracaoObservacaoProdutoSuccess"
                    }))
        {
            @Html.HiddenFor(m => m.QuantidadeProduto, new { @id = "teste11" });
            <button type="submit" class="btn btn-xs btn-primary addPdt"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>
        }

    }
</td>

    <td class="text-center">

        <div class="col-md-20">
            @if (Model.Avaliacoes == null || Model.Avaliacoes.Count == 0)
            {
                @(Html.DropDownListCGUFor(m => m.IdSituacaoProduto, new SelectList((List<SituacaoProdutoViewModel>)TempData["SituacaoProduto"], "IdSituacaoProduto", "DescSituacaoProduto"),
        new Dictionary<string, object>() { { "class", "form-control" }, { "id", "idSituacaoProduto_" + @Model.IdProduto } })
        .OnChangeAtualizaExecutaCallback("Pacto", "AtualizaSituacaoProduto",
            new Dictionary<string, string>() {
                        {"idSituacaoProduto","idSituacaoProduto_"+@Model.IdProduto},
                        {"idPacto", Html.IdFor(m => m.IdPacto).ToString()},
                        {"idProduto","idProduto_"+@Model.IdProduto},
                        {"idOrdemServico", "hdn-id-ordem-servico"}
            }, callbackFunction: "retornoAtualizaSituacaoProduto").SetDisabled((!Model.PodeEditar && !Model.PodeEditarAndamento) || Model.IdProduto == 0))


            }
            else
            {
                var listaSituacao = (IEnumerable<SituacaoProdutoViewModel>)TempData["SituacaoProduto"];
                foreach (var situacaoProduto in listaSituacao)
                {
                    if (Model.IdSituacaoProduto == situacaoProduto.IdSituacaoProduto)
                    {
                        @Html.LabelForModel(situacaoProduto.DescSituacaoProduto);
                    }
                }
            }

        </div>

        <input id="idProduto_@Model.IdProduto" name="idProduto_@Model.IdProduto" type="hidden" value="@Model.IdProduto">


    </td>

    <td>
        <div class="row">
            <div class="col-md-4">
                @using (Ajax.BeginForm("PreparaAlteracaoProduto", "Pacto", new { indexProduto = Model.Index, idPacto = Model.IdPacto, idTipoPacto = Model.IdTipoPacto },
                new AjaxOptions()
                {
                    HttpMethod = "Post",
                    UpdateTargetId = "containerProdutosFormPartial",
                    OnSuccess = "preparaAlteracaoProdutoSuccess(data)"
                }))
                {

                    <button type="submit" class="btn btn-xs btn-primary addPdt" @(!Model.PodeEditar && !Model.PodeEditarAndamento ? "disabled" : "")><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>
                }
            </div>

            <div class="col-md-8">
                @using (Ajax.BeginForm("ExcluiProduto", "Pacto", new { indexProduto = Model.Index, idPacto = Model.IdPacto, idTipoPacto = Model.IdTipoPacto },
                    new AjaxOptions()
                    {
                        HttpMethod = "Post",
                        OnSuccess = "excluirProdutoSucesso(data)"
                    }))
                {
                    <button type="submit" class="btn btn-xs btn-danger remPdt" @((!Model.PodeEditar && !Model.PodeEditarAndamento) ? "disabled" : "")><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                }
            </div>


        </div>

    </td>

</tr>
<script type="text/javascript">

    function retornoAtualizaSituacaoProduto(resultado) {
        alert(resultado)
    }
</script>